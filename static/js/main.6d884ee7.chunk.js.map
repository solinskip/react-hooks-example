{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","hooks/http.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","components/Ingredients/IngredientList.js","components/Ingredients/Ingredients.js","context/auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","LoadingIndicator","IngredientForm","React","memo","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","amount","setAmount","components_UI_Card","onSubmit","event","preventDefault","onAddIngredient","htmlFor","id","type","value","onChange","target","isLoading","components_UI_LoadingIndicator","initialState","loading","error","data","extra","identifier","httpReducer","state","action","objectSpread2","responseData","errorMessage","Error","useHttp","_useReducer","useReducer","_useReducer2","http","dispatchHttp","clear","useCallback","sendRequest","url","method","body","fetch","headers","Content-Type","then","response","json","catch","ErrorModal","Fragment","onClick","onClose","Search","setFilteredIngredients","filter","setFilter","_useHttp","inputRef","useRef","useEffect","timer","setTimeout","current","queryParams","length","URLSearchParams","orderBy","equalTo","concat","clearTimeout","ingredients","_i","_Object$entries","entries","_Object$entries$_i","key","push","UI_ErrorModal","ref","IngredientList","console","log","map","ig","onRemoveItem","bind","ingredientReducer","toConsumableArray","ingredient","Ingredients","dispatchIngredients","name","addIngredientHandler","JSON","stringify","removeIngredientHandler","ingredientId","setFilteredIngredientsHandler","filteredIngredients","ingredientsList","useMemo","components_Ingredients_IngredientList","Ingredients_IngredientForm","Ingredients_Search","AuthContext","createContext","isAuth","login","AuthContextProvider","isAuthenticated","setIsAuthenticated","Provider","Auth","authContext","useContext","App","components_Ingredients_Ingredients","src_components_Auth","ReactDOM","render","auth_context","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d884ee7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from \"../UI/LoadingIndicator\";\n\nconst IngredientForm = React.memo(props => {\n    const [title, setTitle] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const submitHandler = event => {\n        event.preventDefault();\n        props.onAddIngredient({title: title, amount: amount});\n    };\n\n    return (\n        <section className=\"ingredient-form\">\n            <Card>\n                <form onSubmit={submitHandler}>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"title\">Name</label>\n                        <input\n                            id=\"title\"\n                            type=\"text\"\n                            value={title}\n                            onChange={event => setTitle(event.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <input\n                            id=\"amount\"\n                            type=\"number\"\n                            value={amount}\n                            onChange={event => setAmount(event.target.value)}\n                        />\n                    </div>\n                    <div className=\"ingredient-form__actions\">\n                        <button type=\"submit\">Add Ingredient</button>\n                        {props.isLoading ? <LoadingIndicator/> : null}\n                    </div>\n                </form>\n            </Card>\n        </section>\n    );\n});\n\nexport default IngredientForm;\n","import {useCallback, useReducer} from \"react\";\n\nconst initialState = {\n    loading: false,\n    error: null,\n    data: null,\n    extra: null,\n    identifier: null\n};\n\nconst httpReducer = (state, action) => {\n    switch (action.type) {\n        case 'SEND':\n            return {loading: true, error: null, data: null, extra: null, identifier: action.identifier};\n        case 'RESPONSE':\n            return {...state, loading: false, data: action.responseData, extra: action.extra};\n        case 'ERROR':\n            return {loading: false, error: action.errorMessage};\n        case 'CLEAR' :\n            return initialState;\n        default:\n            throw new Error('Should not be reached!')\n    }\n}\n\nconst useHttp = () => {\n    const [http, dispatchHttp] = useReducer(httpReducer, initialState);\n\n    const clear = useCallback(() => dispatchHttp({type: 'CLEAR'}), []);\n\n    const sendRequest = useCallback((url, method, body, extra, identifier) => {\n        dispatchHttp({type: 'SEND', identifier: identifier})\n\n        fetch(url, {\n            method: method,\n            body: body,\n            headers: {'Content-Type': 'application/json'}\n        }).then(response => {\n            return response.json();\n        }).then(response => {\n            dispatchHttp({type: 'RESPONSE', responseData: response, extra: extra})\n        }).catch(error => {\n            dispatchHttp({type: 'ERROR', errorMessage: 'Something went wrong!'})\n        })\n    }, []);\n    return {\n        isLoading: http.loading,\n        error: http.error,\n        data: http.data,\n        extra: http.extra,\n        identifier: http.identifier,\n        sendRequest: sendRequest,\n        clear: clear\n    };\n}\n\nexport default useHttp;","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, {useEffect, useRef, useState} from 'react';\nimport useHttp from \"../../hooks/http\";\nimport Card from '../UI/Card';\nimport './Search.css';\nimport ErrorModal from \"../UI/ErrorModal\";\n\nconst Search = React.memo(props => {\n    const {setFilteredIngredients} = props;\n    const [filter, setFilter] = useState('');\n\n    const {isLoading, data, error, sendRequest, clear} = useHttp();\n\n    const inputRef = useRef();\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (filter === inputRef.current.value) {\n                let queryParams = filter.length > 0\n                    ? '?' + new URLSearchParams({\n                    orderBy: '\"title\"',\n                    equalTo: `\"${filter}\"`\n                })\n                    : '';\n\n                sendRequest(\n                    'https://react-hooks-edcac.firebaseio.com/ingredients.json' + queryParams,\n                    'GET'\n                )\n            }\n        }, 500);\n        // Cleanup function\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [filter, inputRef, sendRequest])\n\n    useEffect(() => {\n        if (!isLoading && !error && data) {\n            const ingredients = [];\n\n            for (let [key, value] of Object.entries(data)) {\n                ingredients.push({\n                    id: key,\n                    title: value.title,\n                    amount: value.amount\n                })\n            }\n            setFilteredIngredients(ingredients);\n        }\n    }, [data, isLoading, error, setFilteredIngredients])\n\n    return (\n        <section className=\"search\">\n            {error && <ErrorModal onClick={clear} >{error}</ErrorModal>}\n            <Card>\n                <div className=\"search-input\">\n                    <label>Filter by Title</label>\n                    {isLoading && <span>Loading...</span>}\n                    <input ref={inputRef} type=\"text\" value={filter} onChange={event => setFilter(event.target.value)}/>\n                </div>\n            </Card>\n        </section>\n    );\n});\n\nexport default Search;\n","import React from 'react';\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n    console.log('RENDERING INGREDIENTLIST');\n\n    return (\n        <section className=\"ingredient-list\">\n            <h2>Loaded Ingredients</h2>\n            {props.ingredients.length === 0\n                ? 'Brak danych...'\n                : (\n                    <ul>\n                        {props.ingredients.map(ig => (\n                            <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n                                <span>{ig.title}</span>\n                                <span>{ig.amount}x</span>\n                            </li>\n                        ))}\n                    </ul>\n                )\n            }\n        </section>\n    );\n};\n\nexport default IngredientList;\n","import React, {useCallback, useEffect, useMemo, useReducer} from 'react';\nimport IngredientForm from './IngredientForm';\nimport useHttp from \"../../hooks/http\";\nimport Search from './Search';\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\n\nconst ingredientReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET':\n            return action.ingredients;\n        case 'ADD':\n            return [...state, action.ingredient]\n        case 'DELETE':\n            return state.filter(ingredient => ingredient.id !== action.id)\n        default:\n            throw new Error('Should not get there!')\n    }\n}\n\nconst Ingredients = () => {\n    const [ingredients, dispatchIngredients] = useReducer(ingredientReducer, []);\n    const {isLoading, data, error, extra, identifier, sendRequest, clear} = useHttp();\n    // const [ingredients, setIngredients] = useState([]);\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (!isLoading && !error) {\n            if (identifier === 'REMOVE_INGREDIENT') {\n                dispatchIngredients({type: 'DELETE', id: extra})\n            } else if (identifier === 'ADD_INGREDIENT') {\n                dispatchIngredients({type: 'ADD', ingredient: {id: data.name, ...extra}});\n            }\n        }\n    }, [isLoading, data, extra, identifier, error]);\n\n    // First version\n    // const addIngredientHandler = useCallback(ingredient => {\n    //     setIsLoading(true);\n    //     fetch('https://react-hooks-edcac.firebaseio.com/ingredients.json', {\n    //         method: 'POST',\n    //         body: JSON.stringify(ingredient),\n    //         headers: {'Content-Type': 'application/json'}\n    //     }).then(response => {\n    //         setIsLoading(false);\n    //         return response.json();\n    //     }).then(responseData => {\n    //         setIngredients(prevIngredients => [\n    //             ...prevIngredients,\n    //             {id: responseData.name, ...ingredient}\n    //         ]);\n    //     })\n    // }, []);\n\n    // Second version\n    // const addIngredientHandler = useCallback(ingredient => {\n    //     dispatchHttp({type: 'SEND'})\n    //     fetch('https://react-hooks-edcac.firebaseio.com/ingredients.json', {\n    //         method: 'POST',\n    //         body: JSON.stringify(ingredient),\n    //         headers: {'Content-Type': 'application/json'}\n    //     }).then(response => {\n    //         dispatchHttp({type: 'RESPONSE'})\n    //         return response.json();\n    //     }).then(responseData => {\n    //         dispatchIngredients({type: 'ADD', ingredient: {id: responseData.name, ...ingredient}});\n    //     })\n    // }, []);\n\n    // Third version\n    const addIngredientHandler = useCallback(ingredient => {\n        sendRequest(\n            'https://react-hooks-edcac.firebaseio.com/ingredients.json',\n            'POST',\n            JSON.stringify(ingredient),\n            ingredient,\n            'ADD_INGREDIENT'\n        )\n    }, [sendRequest]);\n\n    // First version\n    // const removeIngredientHandler = useCallback(ingredientId => {\n    //     setIsLoading(true);\n    //     fetch(`https://react-hooks-edcac.firebaseio.com/ingredients/${ingredientId}.json`, {\n    //         method: 'DELETE',\n    //     }).then(response => {\n    //         setIsLoading(false);\n    //         //\n    //         setIngredients(prevState =>\n    //             prevState.filter(ingredient => ingredient.id !== ingredientId)\n    //         );\n    //     }).catch((error) => {\n    //         setError('Something went wrong');\n    //         setIsLoading(false);\n    //     })\n    // }, []);\n\n    // Second version\n    // const removeIngredientHandler = useCallback(ingredientId => {\n    //     dispatchHttp({type: 'SEND'})\n    //\n    //     fetch(`https://react-hooks-edcac.firebaseio.com/ingredients/${ingredientId}.json`, {\n    //         method: 'DELETE',\n    //     }).then(response => {\n    //         dispatchHttp({type: 'RESPONSE'})\n    //         dispatchIngredients({type: 'DELETE', id: ingredientId})\n    //     }).catch((error) => {\n    //         dispatchHttp({type: 'ERROR', errorMessage: error.message})\n    //     })\n    // }, []);\n\n    // Third version\n    const removeIngredientHandler = useCallback(ingredientId => {\n        sendRequest(\n            `https://react-hooks-edcac.firebaseio.com/ingredients/${ingredientId}.json`,\n            'DELETE',\n            null,\n            ingredientId,\n            'REMOVE_INGREDIENT'\n        )\n    }, [sendRequest]);\n\n    // useCallback prevent reload\n    const setFilteredIngredientsHandler = useCallback(filteredIngredients => {\n        // setIngredients(filteredIngredients);\n        dispatchIngredients({type: 'SET', ingredients: filteredIngredients});\n    }, []);\n\n    // const clearError = useCallback(() => {\n    //     dispatchHttp({type: 'CLEAR'});\n    // }, []);\n\n    // Example: for rendering whole component better is React.memo,\n    // Prevent recreating on every lifecycle Ingredient component,\n    const ingredientsList = useMemo(() => {\n        return <IngredientList ingredients={ingredients} onRemoveItem={removeIngredientHandler}/>\n    }, [ingredients, removeIngredientHandler]);\n\n    return (\n        <div className=\"App\">\n            {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n            <IngredientForm onAddIngredient={addIngredientHandler} isLoading={isLoading}/>\n            <section>\n                <Search setFilteredIngredients={setFilteredIngredientsHandler}/>\n                {ingredientsList}\n            </section>\n        </div>\n    );\n}\n\nexport default Ingredients;\n","import React, {createContext, useState} from \"react\";\n\nexport const AuthContext = createContext({\n    isAuth: false,\n    login: () => {}\n});\n\nconst AuthContextProvider = props => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const loginHandler = () => {\n        setIsAuthenticated(true);\n    }\n\n    return (\n        <AuthContext.Provider value={{login: loginHandler, isAuth: isAuthenticated}}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider;","import React, {useContext} from 'react';\n\nimport Card from './UI/Card';\nimport {AuthContext} from \"../context/auth-context\";\nimport './Auth.css';\n\nconst Auth = props => {\n    const authContext = useContext(AuthContext);\n\n    const loginHandler = () => {\n        authContext.login();\n    };\n\n    return (\n        <div className=\"auth\">\n            <Card>\n                <h2>You are not authenticated!</h2>\n                <p>Please log in to continue.</p>\n                <button onClick={loginHandler}>Log In</button>\n            </Card>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, {useContext} from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from \"./components/Auth\";\nimport {AuthContext} from \"./context/auth-context\";\n\nconst App = props => {\n    const authContext = useContext(AuthContext);\n\n    return authContext.isAuth\n        ? <Ingredients/>\n        : <Auth/>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthContextProvider from \"./context/auth-context\";\n\nReactDOM.render(<AuthContextProvider><App /></AuthContextProvider>, document.getElementById('root'));\n"],"sourceRoot":""}